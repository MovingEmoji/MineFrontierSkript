function calc(p: player, i: item, slot: text):
	set {_uuid} to uuid of {_p}
	set {_parameters} to tag "Parameters" of nbt of {_i}
	set {_stones} to tag "Stones" of nbt of {_i}
	if tag "Job" of {_parameters} is "全職業":
		set {_t} to true
	else if tag "Job" of {_parameters} contains {player.job::%{_uuid}%}:
		set {_t} to true
	if {_t} is set:
		set {_t} to false
		if tag "Slot" of {_parameters} is {_slot}:
			set {_t} to true	
		if {_t} is true:
			set {_t} to false
			if tag "Level" of {_parameters} is -1:
				set {_t} to true
			else if tag "Level" of {_parameters} <= {player.level::%{_uuid}%}:
				set {_t} to true
			if {_t} is true:
				set {_t} to false
				set {_id} to tag "Id" of {_parameters}
				set {_newparam} to tag "Parameters" of nbt of {item.save.list::%{_id}%}
				if tag "Version" of {_parameters} is tag "Version" of {_newparam}:
					set {_t} to true
				if {_t} is true:
					set {_damage} to tag "Damage" of {_parameters}
					set {_protection} to tag "Protection" of {_parameters}
					set {_magicdamage} to tag "MagicDamage" of {_parameters}
					set {_health} to tag "Health" of {_parameters}
					set {_mp} to tag "MP" of {_parameters}
					set {_dex} to tag "DEX" of {_parameters}
					if tag "Stone" of {_parameters} is not 0:
						set {_c} to 1
						set {_l} to tag "Stone" of {_parameters}
						loop {_l} times:
							if tag "Stone%{_c}%" of {_stones} is not 0:
								set {_id} to tag "Stone%{_c}%" of {_stones}
								set {_sparameters} to tag "Parameters" of nbt of {item.save.list::%{_id}%}
								set {_n} to tag "Damage" of {_sparameters}
								set {_damage} to {_damage} + {_n}
								set {_n} to tag "Protection" of {_sparameters}
								set {_protection} to {_protection} + {_n}
								set {_n} to tag "MagicDamage" of {_sparameters}
								set {_magicdamage} to {_magicdamage} + {_n}
								set {_n} to tag "Health" of {_sparameters}
								set {_health} to {_health} + {_n}
								set {_n} to tag "MP" of {_sparameters}
								set {_mp} to {_mp} + {_n}
								set {_n} to tag "DEX" of {_sparameters}
								set {_dex} to {_dex} + {_n}
							delete {_n}
							add 1 to {_c}
					add {_damage} to {result.damage::%{_uuid}%}
					add {_protection} to {result.protection::%{_uuid}%}
					add {_magicdamage} to {result.magicdamage::%{_uuid}%}
					add {_health} to {result.health::%{_uuid}%}
					add {_mp} to {result.mp::%{_uuid}%}
					add {_dex} to {result.dex::%{_uuid}%}
				else:
					send "&c装備しているアイテムが最新版ではありませんGUIよりアップデートしてください &7(%{_slot}%&7)" to {_p}
function playercalc(p: player):
	set {_uuid} to uuid of {_p}
	set {result.damage::%{_uuid}%} to 0
	set {result.protection::%{_uuid}%} to 0
	set {result.magicdamage::%{_uuid}%} to 0
	set {result.health::%{_uuid}%} to 0
	set {result.mp::%{_uuid}%} to 0
	set {result.dex::%{_uuid}%} to 0
	set {_item} to {_p}'s tool
	calc({_p},{_item},"メインハンド")
	set {_item} to {_p}'s offhand
	calc({_p},{_item},"オフハンド")
	set {_item} to {_p}'s helmet
	calc({_p},{_item},"アーマー")
	set {_item} to {_p}'s chestplate
	calc({_p},{_item},"アーマー")
	set {_item} to {_p}'s leggings
	calc({_p},{_item},"アーマー")
	set {_item} to {_p}'s boots
	calc({_p},{_item},"アーマー")
	if {debug.scoreboard::%{_uuid}%} is set:
		refsb({_p})
on join:
	wait 5 tick
	playercalc(player)
command /calc:
	trigger:
		playercalc(player)
on tool change:
	play "UI_BUTTON_CLICK" to player at volume 0.05
	wait a tick
	playercalc(player)
on player armor change:
	playercalc(player)
on offhand switch:
	cancel event
on drop:
	playercalc(player)
on pickup:
	wait a tick
	playercalc(player)
on inventory click:
	wait a tick
	playercalc(player)
on damage:
	if victim is not a player:
		set {_damage} to damage * 2
		if {_damage} >= 111.1:
			set {_t} to true
			set {_r} to 1
		else:
			set {_r} to {_damage} / 101
		set {_damage} to ({player.damage::%attacker's uuid%} + {result.damage::%attacker's uuid%} + {variate.damage::%attacker's uuid%}) * {_r}
		delete {variate.damage::%attacker's uuid%}
		set {_parameters} to tag "Parameters" of nbt of victim's leggings
		set {_pro} to tag "Protection" of {_parameters}
		set {_damage} to {_damage} - {_pro}
		if {_damage} <= 0:
			set {_damage} to 1
		set {_hp} to tag "Health" of {_parameters}
		set {_hp} to {_hp} - {_damage}
		if {_hp} <= 0:
			set damage to 10
		else:
			set damage to 0
			set tag "Health" of {_parameters} to {_hp}
			add "{Parameters:%{_parameters}%}" to nbt of victim's leggings
		if {_t} is set:
			wait a tick
			set x of victim's velocity to x of victim's velocity * 1.5
			set z of victim's velocity to z of victim's velocity * 1.5
		set {_lc} to location 1.7 above victim
		set {_r1} to random integer between -10 and 10
		set {_r1} to {_r1}/10
		set x coord of {_lc} to x coord of {_lc} + {_r1}
		set {_r1} to random integer between -4 and 4
		set {_r1} to {_r1}/10
		set y coord of {_lc} to y coord of {_lc} + {_r1}
		set {_r1} to random integer between -10 and 10
		set {_r1} to {_r1}/10
		set z coord of {_lc} to z coord of {_lc} + {_r1}
		if victim is not villager:
			event is not canceled
			set {_holo} to new hologram at {_lc}
			if victim is not armor stand:
				add text "&c⚔ &7%{_damage}%" to hologram {_holo}
				set {_lc} to location 2.1 above victim
			wait 2 second
			unregister hologram {_holo}
	else:
		if attacker is not a player:
			if damage cause is fall:
				set {_damage} to rounded up damage * 3
				set {player.nowhealth::%victim's uuid%} to {player.nowhealth::%victim's uuid%} - {_damage}
			else:
				set {_parameters} to tag "Parameters" of nbt of attacker's leggings
				set {_damage} to tag "Damage" of {_parameters}
				set {_damage} to {_damage} - ({player.protection::%victim's uuid%} + {result.protection::%victim's uuid%} + {variate.protection::%victim's uuid%})
				delete {variate.protection::%victim's uuid%}
				if {_damage} <= 0:
					set {_damage} to 1
				if {player.nowhealth::%victim's uuid%} - {_damage} < 0:
					set {player.nowhealth::%victim's uuid%} to 0
				if {player.nowhealth::%victim's uuid%} - {_damage} >= 0:
					set {player.nowhealth::%victim's uuid%} to {player.nowhealth::%victim's uuid%} - {_damage}
			set damage to 0
		else:
			cancel event
on death:
	if victim is not a player:
		set {_parameters} to tag "Parameters" of nbt of victim's leggings
		if attacker is a player:
			set {_xp} to tag "XP" of {_parameters}
			givexp(attacker,{_xp})
			set {_lc} to location 1.9 above victim
			set {_holo} to new hologram at {_lc}
			add text "[%attacker%]" to hologram {_holo}
			add text "&a&l経験値を獲得しました" to hologram {_holo}
			add text "&7・--  &a&lXP &f%{_xp}%  &7--・" to hologram {_holo}
			add item nether star to hologram {_holo}
			loop 5 times:
				set y coord of {_lc} to y coord of {_lc} + 0.05
				set location of holo {_holo} to {_lc}
				wait 1 tick
			loop 20 times:
				set y coord of {_lc} to y coord of {_lc} + 0.01
				set location of holo {_holo} to {_lc}
				wait 2 tick
			wait 1.3 seconds
			unregister hologram {_holo}

#ここにバフ消す処理仮置き
on quit:
	delete {variate.protection::%player's uuid%}
	delete {variate.damage::%player's uuid%}

on death:
	if victim is a player:
		delete {variate.protection::%victim's uuid%}
		delete {variate.damage::%victim's uuid%}