function registerSkill(name: string, job: string):
	if {save.skill.%{_job}%::*} does not contain {_name}:
		add {_name} to {save.skill.%{_job}%::*}
	if {save.skill.%{_job}%::*} contains {_name}:
		broadcast "&7[&6*&7] &aSuccessfully registered skill. &f[&d&l%{_name}%&f]"
	else:
		broadcast "&7[&6*&7] &cCan't registered skill. &f[&d&l%{_name}%&f]"
command /skill [<text>] [<text>]:
	permission: admin
	trigger:
		if arg-1 is set:
			if arg-1 is "setmobile":
				if arg-2 is set:
					if {save.skill.共通::*} contains arg-2:
						set {player.mobile.skill::%player's uuid%} to arg-2
						send "&a共通スキルを &f「&d&l%arg-2%&f」 &aに設定しました"
					else:
						send "&cスキルが存在しません"
			if arg-1 is "setcommon1":
				if arg-2 is set:
					if {save.skill.%{player.job::%player's uuid%}%::*} contains arg-2:
						set {player.common1.skill::%player's uuid%} to arg-2
						send "&aスキル１を &f「&d&l%arg-2%&f」 &aに設定しました"
					else:
						send "&cスキルが存在しません"
on join:
	set {player.mobile.cooldown::%player's uuid%} to now
	set {player.common1.cooldown::%player's uuid%} to now
	set {player.common2.cooldown::%player's uuid%} to now
	set {player.common3.cooldown::%player's uuid%} to now
on quit:
	delete {player.mobile.cooldown::%player's uuid%}
	delete {player.common1.cooldown::%player's uuid%}
	delete {player.common2.cooldown::%player's uuid%}
	delete {player.common3.cooldown::%player's uuid%}